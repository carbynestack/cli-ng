#
# Copyright (c) 2021 - for information on the respective copyright owner
# see the NOTICE file and/or the repository https://github.com/carbynestack/cli-ng.
#
# SPDX-License-Identifier: Apache-2.0
#
name: Artifacts
on: push
env:
  SHELL: /bin/bash
jobs:
  verification:
    runs-on: ubuntu-20.04
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Verify changed files
        uses: pre-commit/action@v2.0.3
  test:
    runs-on: ubuntu-20.04
    needs: verification
    strategy:
      fail-fast: false
      matrix:
        jdk: [ 17 ]
        distribution: [ temurin,graalvm ]
        compilation: [ jit,aot ]
        exclude:
          - distribution: temurin
            compilation: aot
    env:
      JDK: ${{ matrix.jdk }}
      DISTRIBUTION: ${{ matrix.distribution }}
      COMPILATION: ${{ matrix.compilation }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up GraalVM JDK ${{ matrix.jdk }}
        if: contains(matrix.distribution, 'graal')
        uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: ${{ matrix.jdk }}
          components: 'native-image'
          cache: 'maven'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Temurin JDK ${{ matrix.jdk }}
        if: contains(matrix.distribution, 'temurin')
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'temurin'
          cache: 'maven'
      - name: Setting up Github Package Repository as Maven Repository
        uses: s4u/maven-settings-action@v2
        with:
          githubServer: false
          servers: |
            [{
              "id": "github",
              "username": "${{ secrets.GHPR_USERNAME }}",
              "password": "${{ secrets.GHPR_TOKEN }}"
            }]
      - name: Build with Maven
        if: (!contains(matrix.compilation, 'aot'))
        run: mvn install -Dskip.tests --batch-mode --update-snapshots --no-transfer-progress
      - name: Native build with Maven
        if: contains(matrix.compilation, 'aot')
        run: mvn clean -Pnative -DskipTests -Dskip.tests package --batch-mode --update-snapshots --no-transfer-progress
      - name: Run tests
        if: (!contains(matrix.compilation, 'aot'))
        run: mvn verify --activate-profiles coverage --batch-mode --no-transfer-progress
      - name: Native tests run
        if: contains(matrix.compilation, 'aot')
        run: mvn clean -Pnative -Dagent=true test --batch-mode --no-transfer-progress
      - name: Collect Jacoco reports
        run: echo ::set-output name=reports::$(find . -regex '.*/target/site/jacoco/jacoco.xml' | tr '\n' ',' | sed 's/.$//')
        id: jacoco
      - uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ steps.jacoco.outputs.reports }}
          env_vars: JDK,DISTRIBUTION,COMPILATION
          fail_ci_if_error: true
          name: codecov